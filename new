#!/bin/bash -e

[ -z "$DEBUG" ] || set -x

MY_HOSTNAME="$1"
RELOAD_SERVICES=()

main() {
  set_base_path
  request_sudo_privileges
  preserve_sudo_privileges_until_exit
  apply_configs
  reload_modified_services
  success
}

request_sudo_privileges() {
  sudo -v
}

set_base_path() {
  SOURCE="${BASH_SOURCE[0]}"
  DIR="$( dirname "$SOURCE" )"
  while [ -h "$SOURCE" ]
  do
    SOURCE="$(readlink $SOURCE)"
    [[ $SOURCE != /* ]] && SOURCE="${DIR}/$SOURCE"
    DIR="$( cd -P $(dirname $SOURCE) && pwd )"
  done
  BASE_PATH="$(cd $DIR && pwd)"
}

preserve_sudo_privileges_until_exit() {
  while sleep 10
  do
    sudo -v 2>&-
  done &

  SUDO_GUARDIAN_PID="$!"
}

apply_configs() {
  local config

  pushd "${BASE_PATH}/libconfig" >&-
    for config in *
    do
      . "$config"
    done
  popd >&-
}

reload_modified_services() {
  local modified_services=${RELOAD_SERVICES[@]:?must be defined}
  local modified_services_uniq=(
    $(printf "%s\n" ${modified_services[@]} | sort -u)
  )

  killall ${modified_services_uniq[@]}
}

success() {
  echo -e "\nI am yours, ${USER}\n"
}

cleanup() {
 if [ -n "$SUDO_GUARDIAN_PID" ]
 then
    ! ps "$SUDO_GUARDIAN_PID" >&- || kill -PIPE "$SUDO_GUARDIAN_PID"
 fi
}

trap cleanup EXIT

main
